name: Testing

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: [lint]

    services:
      postgres:
        image: postgres:9.6-alpine
        ports:
          - "5432"
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      mysql:
        image: mysql:5.7
        ports:
          - "3306"
        env:
          MYSQL_ROOT_PASSWORD: test
          MYSQL_DATABASE: test
          MYSQL_USER: test
          MYSQL_PASSWORD: test
        options: >-
          --health-cmd "mysqladmin ping -h 127.0.0.1 -u $$MYSQL_USER --password=$$MYSQL_PASSWORD"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
      - name: Run tests
        if: success()
        run: go test -cover ./... -coverprofile=coverage.txt -covermode=atomic
        env:
          TEST_POSTGRES: postgres://test:test@localhost:${{ job.services.postgres.ports[5432] }}/?sslmode=disable
          TEST_MYSQL: root:test@tcp(localhost:${{ job.services.mysql.ports[3306] }})/?charset=utf8

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        if: success()
        with:
          files: ./coverage.txt
